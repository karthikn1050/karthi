import { HttpHandlerOptions as __HttpHandlerOptions } from "@aws-sdk/types";
import { AppStreamClient } from "./AppStreamClient";
import { AssociateApplicationFleetCommandInput, AssociateApplicationFleetCommandOutput } from "./commands/AssociateApplicationFleetCommand";
import { AssociateFleetCommandInput, AssociateFleetCommandOutput } from "./commands/AssociateFleetCommand";
import { BatchAssociateUserStackCommandInput, BatchAssociateUserStackCommandOutput } from "./commands/BatchAssociateUserStackCommand";
import { BatchDisassociateUserStackCommandInput, BatchDisassociateUserStackCommandOutput } from "./commands/BatchDisassociateUserStackCommand";
import { CopyImageCommandInput, CopyImageCommandOutput } from "./commands/CopyImageCommand";
import { CreateAppBlockCommandInput, CreateAppBlockCommandOutput } from "./commands/CreateAppBlockCommand";
import { CreateApplicationCommandInput, CreateApplicationCommandOutput } from "./commands/CreateApplicationCommand";
import { CreateDirectoryConfigCommandInput, CreateDirectoryConfigCommandOutput } from "./commands/CreateDirectoryConfigCommand";
import { CreateFleetCommandInput, CreateFleetCommandOutput } from "./commands/CreateFleetCommand";
import { CreateImageBuilderCommandInput, CreateImageBuilderCommandOutput } from "./commands/CreateImageBuilderCommand";
import { CreateImageBuilderStreamingURLCommandInput, CreateImageBuilderStreamingURLCommandOutput } from "./commands/CreateImageBuilderStreamingURLCommand";
import { CreateStackCommandInput, CreateStackCommandOutput } from "./commands/CreateStackCommand";
import { CreateStreamingURLCommandInput, CreateStreamingURLCommandOutput } from "./commands/CreateStreamingURLCommand";
import { CreateUpdatedImageCommandInput, CreateUpdatedImageCommandOutput } from "./commands/CreateUpdatedImageCommand";
import { CreateUsageReportSubscriptionCommandInput, CreateUsageReportSubscriptionCommandOutput } from "./commands/CreateUsageReportSubscriptionCommand";
import { CreateUserCommandInput, CreateUserCommandOutput } from "./commands/CreateUserCommand";
import { DeleteAppBlockCommandInput, DeleteAppBlockCommandOutput } from "./commands/DeleteAppBlockCommand";
import { DeleteApplicationCommandInput, DeleteApplicationCommandOutput } from "./commands/DeleteApplicationCommand";
import { DeleteDirectoryConfigCommandInput, DeleteDirectoryConfigCommandOutput } from "./commands/DeleteDirectoryConfigCommand";
import { DeleteFleetCommandInput, DeleteFleetCommandOutput } from "./commands/DeleteFleetCommand";
import { DeleteImageBuilderCommandInput, DeleteImageBuilderCommandOutput } from "./commands/DeleteImageBuilderCommand";
import { DeleteImageCommandInput, DeleteImageCommandOutput } from "./commands/DeleteImageCommand";
import { DeleteImagePermissionsCommandInput, DeleteImagePermissionsCommandOutput } from "./commands/DeleteImagePermissionsCommand";
import { DeleteStackCommandInput, DeleteStackCommandOutput } from "./commands/DeleteStackCommand";
import { DeleteUsageReportSubscriptionCommandInput, DeleteUsageReportSubscriptionCommandOutput } from "./commands/DeleteUsageReportSubscriptionCommand";
import { DeleteUserCommandInput, DeleteUserCommandOutput } from "./commands/DeleteUserCommand";
import { DescribeAppBlocksCommandInput, DescribeAppBlocksCommandOutput } from "./commands/DescribeAppBlocksCommand";
import { DescribeApplicationFleetAssociationsCommandInput, DescribeApplicationFleetAssociationsCommandOutput } from "./commands/DescribeApplicationFleetAssociationsCommand";
import { DescribeApplicationsCommandInput, DescribeApplicationsCommandOutput } from "./commands/DescribeApplicationsCommand";
import { DescribeDirectoryConfigsCommandInput, DescribeDirectoryConfigsCommandOutput } from "./commands/DescribeDirectoryConfigsCommand";
import { DescribeFleetsCommandInput, DescribeFleetsCommandOutput } from "./commands/DescribeFleetsCommand";
import { DescribeImageBuildersCommandInput, DescribeImageBuildersCommandOutput } from "./commands/DescribeImageBuildersCommand";
import { DescribeImagePermissionsCommandInput, DescribeImagePermissionsCommandOutput } from "./commands/DescribeImagePermissionsCommand";
import { DescribeImagesCommandInput, DescribeImagesCommandOutput } from "./commands/DescribeImagesCommand";
import { DescribeSessionsCommandInput, DescribeSessionsCommandOutput } from "./commands/DescribeSessionsCommand";
import { DescribeStacksCommandInput, DescribeStacksCommandOutput } from "./commands/DescribeStacksCommand";
import { DescribeUsageReportSubscriptionsCommandInput, DescribeUsageReportSubscriptionsCommandOutput } from "./commands/DescribeUsageReportSubscriptionsCommand";
import { DescribeUsersCommandInput, DescribeUsersCommandOutput } from "./commands/DescribeUsersCommand";
import { DescribeUserStackAssociationsCommandInput, DescribeUserStackAssociationsCommandOutput } from "./commands/DescribeUserStackAssociationsCommand";
import { DisableUserCommandInput, DisableUserCommandOutput } from "./commands/DisableUserCommand";
import { DisassociateApplicationFleetCommandInput, DisassociateApplicationFleetCommandOutput } from "./commands/DisassociateApplicationFleetCommand";
import { DisassociateFleetCommandInput, DisassociateFleetCommandOutput } from "./commands/DisassociateFleetCommand";
import { EnableUserCommandInput, EnableUserCommandOutput } from "./commands/EnableUserCommand";
import { ExpireSessionCommandInput, ExpireSessionCommandOutput } from "./commands/ExpireSessionCommand";
import { ListAssociatedFleetsCommandInput, ListAssociatedFleetsCommandOutput } from "./commands/ListAssociatedFleetsCommand";
import { ListAssociatedStacksCommandInput, ListAssociatedStacksCommandOutput } from "./commands/ListAssociatedStacksCommand";
import { ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput } from "./commands/ListTagsForResourceCommand";
import { StartFleetCommandInput, StartFleetCommandOutput } from "./commands/StartFleetCommand";
import { StartImageBuilderCommandInput, StartImageBuilderCommandOutput } from "./commands/StartImageBuilderCommand";
import { StopFleetCommandInput, StopFleetCommandOutput } from "./commands/StopFleetCommand";
import { StopImageBuilderCommandInput, StopImageBuilderCommandOutput } from "./commands/StopImageBuilderCommand";
import { TagResourceCommandInput, TagResourceCommandOutput } from "./commands/TagResourceCommand";
import { UntagResourceCommandInput, UntagResourceCommandOutput } from "./commands/UntagResourceCommand";
import { UpdateApplicationCommandInput, UpdateApplicationCommandOutput } from "./commands/UpdateApplicationCommand";
import { UpdateDirectoryConfigCommandInput, UpdateDirectoryConfigCommandOutput } from "./commands/UpdateDirectoryConfigCommand";
import { UpdateFleetCommandInput, UpdateFleetCommandOutput } from "./commands/UpdateFleetCommand";
import { UpdateImagePermissionsCommandInput, UpdateImagePermissionsCommandOutput } from "./commands/UpdateImagePermissionsCommand";
import { UpdateStackCommandInput, UpdateStackCommandOutput } from "./commands/UpdateStackCommand";

export declare class AppStream extends AppStreamClient {
    
    associateApplicationFleet(args: AssociateApplicationFleetCommandInput, options?: __HttpHandlerOptions): Promise<AssociateApplicationFleetCommandOutput>;
    associateApplicationFleet(args: AssociateApplicationFleetCommandInput, cb: (err: any, data?: AssociateApplicationFleetCommandOutput) => void): void;
    associateApplicationFleet(args: AssociateApplicationFleetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AssociateApplicationFleetCommandOutput) => void): void;
    
    associateFleet(args: AssociateFleetCommandInput, options?: __HttpHandlerOptions): Promise<AssociateFleetCommandOutput>;
    associateFleet(args: AssociateFleetCommandInput, cb: (err: any, data?: AssociateFleetCommandOutput) => void): void;
    associateFleet(args: AssociateFleetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AssociateFleetCommandOutput) => void): void;
    
    batchAssociateUserStack(args: BatchAssociateUserStackCommandInput, options?: __HttpHandlerOptions): Promise<BatchAssociateUserStackCommandOutput>;
    batchAssociateUserStack(args: BatchAssociateUserStackCommandInput, cb: (err: any, data?: BatchAssociateUserStackCommandOutput) => void): void;
    batchAssociateUserStack(args: BatchAssociateUserStackCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: BatchAssociateUserStackCommandOutput) => void): void;
    
    batchDisassociateUserStack(args: BatchDisassociateUserStackCommandInput, options?: __HttpHandlerOptions): Promise<BatchDisassociateUserStackCommandOutput>;
    batchDisassociateUserStack(args: BatchDisassociateUserStackCommandInput, cb: (err: any, data?: BatchDisassociateUserStackCommandOutput) => void): void;
    batchDisassociateUserStack(args: BatchDisassociateUserStackCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: BatchDisassociateUserStackCommandOutput) => void): void;
    
    copyImage(args: CopyImageCommandInput, options?: __HttpHandlerOptions): Promise<CopyImageCommandOutput>;
    copyImage(args: CopyImageCommandInput, cb: (err: any, data?: CopyImageCommandOutput) => void): void;
    copyImage(args: CopyImageCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CopyImageCommandOutput) => void): void;
    
    createAppBlock(args: CreateAppBlockCommandInput, options?: __HttpHandlerOptions): Promise<CreateAppBlockCommandOutput>;
    createAppBlock(args: CreateAppBlockCommandInput, cb: (err: any, data?: CreateAppBlockCommandOutput) => void): void;
    createAppBlock(args: CreateAppBlockCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateAppBlockCommandOutput) => void): void;
    
    createApplication(args: CreateApplicationCommandInput, options?: __HttpHandlerOptions): Promise<CreateApplicationCommandOutput>;
    createApplication(args: CreateApplicationCommandInput, cb: (err: any, data?: CreateApplicationCommandOutput) => void): void;
    createApplication(args: CreateApplicationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateApplicationCommandOutput) => void): void;
    
    createDirectoryConfig(args: CreateDirectoryConfigCommandInput, options?: __HttpHandlerOptions): Promise<CreateDirectoryConfigCommandOutput>;
    createDirectoryConfig(args: CreateDirectoryConfigCommandInput, cb: (err: any, data?: CreateDirectoryConfigCommandOutput) => void): void;
    createDirectoryConfig(args: CreateDirectoryConfigCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateDirectoryConfigCommandOutput) => void): void;
    
    createFleet(args: CreateFleetCommandInput, options?: __HttpHandlerOptions): Promise<CreateFleetCommandOutput>;
    createFleet(args: CreateFleetCommandInput, cb: (err: any, data?: CreateFleetCommandOutput) => void): void;
    createFleet(args: CreateFleetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateFleetCommandOutput) => void): void;
    
    createImageBuilder(args: CreateImageBuilderCommandInput, options?: __HttpHandlerOptions): Promise<CreateImageBuilderCommandOutput>;
    createImageBuilder(args: CreateImageBuilderCommandInput, cb: (err: any, data?: CreateImageBuilderCommandOutput) => void): void;
    createImageBuilder(args: CreateImageBuilderCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateImageBuilderCommandOutput) => void): void;
    
    createImageBuilderStreamingURL(args: CreateImageBuilderStreamingURLCommandInput, options?: __HttpHandlerOptions): Promise<CreateImageBuilderStreamingURLCommandOutput>;
    createImageBuilderStreamingURL(args: CreateImageBuilderStreamingURLCommandInput, cb: (err: any, data?: CreateImageBuilderStreamingURLCommandOutput) => void): void;
    createImageBuilderStreamingURL(args: CreateImageBuilderStreamingURLCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateImageBuilderStreamingURLCommandOutput) => void): void;
    
    createStack(args: CreateStackCommandInput, options?: __HttpHandlerOptions): Promise<CreateStackCommandOutput>;
    createStack(args: CreateStackCommandInput, cb: (err: any, data?: CreateStackCommandOutput) => void): void;
    createStack(args: CreateStackCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateStackCommandOutput) => void): void;
    
    createStreamingURL(args: CreateStreamingURLCommandInput, options?: __HttpHandlerOptions): Promise<CreateStreamingURLCommandOutput>;
    createStreamingURL(args: CreateStreamingURLCommandInput, cb: (err: any, data?: CreateStreamingURLCommandOutput) => void): void;
    createStreamingURL(args: CreateStreamingURLCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateStreamingURLCommandOutput) => void): void;
    
    createUpdatedImage(args: CreateUpdatedImageCommandInput, options?: __HttpHandlerOptions): Promise<CreateUpdatedImageCommandOutput>;
    createUpdatedImage(args: CreateUpdatedImageCommandInput, cb: (err: any, data?: CreateUpdatedImageCommandOutput) => void): void;
    createUpdatedImage(args: CreateUpdatedImageCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateUpdatedImageCommandOutput) => void): void;
    
    createUsageReportSubscription(args: CreateUsageReportSubscriptionCommandInput, options?: __HttpHandlerOptions): Promise<CreateUsageReportSubscriptionCommandOutput>;
    createUsageReportSubscription(args: CreateUsageReportSubscriptionCommandInput, cb: (err: any, data?: CreateUsageReportSubscriptionCommandOutput) => void): void;
    createUsageReportSubscription(args: CreateUsageReportSubscriptionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateUsageReportSubscriptionCommandOutput) => void): void;
    
    createUser(args: CreateUserCommandInput, options?: __HttpHandlerOptions): Promise<CreateUserCommandOutput>;
    createUser(args: CreateUserCommandInput, cb: (err: any, data?: CreateUserCommandOutput) => void): void;
    createUser(args: CreateUserCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateUserCommandOutput) => void): void;
    
    deleteAppBlock(args: DeleteAppBlockCommandInput, options?: __HttpHandlerOptions): Promise<DeleteAppBlockCommandOutput>;
    deleteAppBlock(args: DeleteAppBlockCommandInput, cb: (err: any, data?: DeleteAppBlockCommandOutput) => void): void;
    deleteAppBlock(args: DeleteAppBlockCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteAppBlockCommandOutput) => void): void;
    
    deleteApplication(args: DeleteApplicationCommandInput, options?: __HttpHandlerOptions): Promise<DeleteApplicationCommandOutput>;
    deleteApplication(args: DeleteApplicationCommandInput, cb: (err: any, data?: DeleteApplicationCommandOutput) => void): void;
    deleteApplication(args: DeleteApplicationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteApplicationCommandOutput) => void): void;
    
    deleteDirectoryConfig(args: DeleteDirectoryConfigCommandInput, options?: __HttpHandlerOptions): Promise<DeleteDirectoryConfigCommandOutput>;
    deleteDirectoryConfig(args: DeleteDirectoryConfigCommandInput, cb: (err: any, data?: DeleteDirectoryConfigCommandOutput) => void): void;
    deleteDirectoryConfig(args: DeleteDirectoryConfigCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteDirectoryConfigCommandOutput) => void): void;
    
    deleteFleet(args: DeleteFleetCommandInput, options?: __HttpHandlerOptions): Promise<DeleteFleetCommandOutput>;
    deleteFleet(args: DeleteFleetCommandInput, cb: (err: any, data?: DeleteFleetCommandOutput) => void): void;
    deleteFleet(args: DeleteFleetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteFleetCommandOutput) => void): void;
    
    deleteImage(args: DeleteImageCommandInput, options?: __HttpHandlerOptions): Promise<DeleteImageCommandOutput>;
    deleteImage(args: DeleteImageCommandInput, cb: (err: any, data?: DeleteImageCommandOutput) => void): void;
    deleteImage(args: DeleteImageCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteImageCommandOutput) => void): void;
    
    deleteImageBuilder(args: DeleteImageBuilderCommandInput, options?: __HttpHandlerOptions): Promise<DeleteImageBuilderCommandOutput>;
    deleteImageBuilder(args: DeleteImageBuilderCommandInput, cb: (err: any, data?: DeleteImageBuilderCommandOutput) => void): void;
    deleteImageBuilder(args: DeleteImageBuilderCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteImageBuilderCommandOutput) => void): void;
    
    deleteImagePermissions(args: DeleteImagePermissionsCommandInput, options?: __HttpHandlerOptions): Promise<DeleteImagePermissionsCommandOutput>;
    deleteImagePermissions(args: DeleteImagePermissionsCommandInput, cb: (err: any, data?: DeleteImagePermissionsCommandOutput) => void): void;
    deleteImagePermissions(args: DeleteImagePermissionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteImagePermissionsCommandOutput) => void): void;
    
    deleteStack(args: DeleteStackCommandInput, options?: __HttpHandlerOptions): Promise<DeleteStackCommandOutput>;
    deleteStack(args: DeleteStackCommandInput, cb: (err: any, data?: DeleteStackCommandOutput) => void): void;
    deleteStack(args: DeleteStackCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteStackCommandOutput) => void): void;
    
    deleteUsageReportSubscription(args: DeleteUsageReportSubscriptionCommandInput, options?: __HttpHandlerOptions): Promise<DeleteUsageReportSubscriptionCommandOutput>;
    deleteUsageReportSubscription(args: DeleteUsageReportSubscriptionCommandInput, cb: (err: any, data?: DeleteUsageReportSubscriptionCommandOutput) => void): void;
    deleteUsageReportSubscription(args: DeleteUsageReportSubscriptionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteUsageReportSubscriptionCommandOutput) => void): void;
    
    deleteUser(args: DeleteUserCommandInput, options?: __HttpHandlerOptions): Promise<DeleteUserCommandOutput>;
    deleteUser(args: DeleteUserCommandInput, cb: (err: any, data?: DeleteUserCommandOutput) => void): void;
    deleteUser(args: DeleteUserCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteUserCommandOutput) => void): void;
    
    describeAppBlocks(args: DescribeAppBlocksCommandInput, options?: __HttpHandlerOptions): Promise<DescribeAppBlocksCommandOutput>;
    describeAppBlocks(args: DescribeAppBlocksCommandInput, cb: (err: any, data?: DescribeAppBlocksCommandOutput) => void): void;
    describeAppBlocks(args: DescribeAppBlocksCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeAppBlocksCommandOutput) => void): void;
    
    describeApplicationFleetAssociations(args: DescribeApplicationFleetAssociationsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeApplicationFleetAssociationsCommandOutput>;
    describeApplicationFleetAssociations(args: DescribeApplicationFleetAssociationsCommandInput, cb: (err: any, data?: DescribeApplicationFleetAssociationsCommandOutput) => void): void;
    describeApplicationFleetAssociations(args: DescribeApplicationFleetAssociationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeApplicationFleetAssociationsCommandOutput) => void): void;
    
    describeApplications(args: DescribeApplicationsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeApplicationsCommandOutput>;
    describeApplications(args: DescribeApplicationsCommandInput, cb: (err: any, data?: DescribeApplicationsCommandOutput) => void): void;
    describeApplications(args: DescribeApplicationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeApplicationsCommandOutput) => void): void;
    
    describeDirectoryConfigs(args: DescribeDirectoryConfigsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeDirectoryConfigsCommandOutput>;
    describeDirectoryConfigs(args: DescribeDirectoryConfigsCommandInput, cb: (err: any, data?: DescribeDirectoryConfigsCommandOutput) => void): void;
    describeDirectoryConfigs(args: DescribeDirectoryConfigsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeDirectoryConfigsCommandOutput) => void): void;
    
    describeFleets(args: DescribeFleetsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeFleetsCommandOutput>;
    describeFleets(args: DescribeFleetsCommandInput, cb: (err: any, data?: DescribeFleetsCommandOutput) => void): void;
    describeFleets(args: DescribeFleetsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeFleetsCommandOutput) => void): void;
    
    describeImageBuilders(args: DescribeImageBuildersCommandInput, options?: __HttpHandlerOptions): Promise<DescribeImageBuildersCommandOutput>;
    describeImageBuilders(args: DescribeImageBuildersCommandInput, cb: (err: any, data?: DescribeImageBuildersCommandOutput) => void): void;
    describeImageBuilders(args: DescribeImageBuildersCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeImageBuildersCommandOutput) => void): void;
    
    describeImagePermissions(args: DescribeImagePermissionsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeImagePermissionsCommandOutput>;
    describeImagePermissions(args: DescribeImagePermissionsCommandInput, cb: (err: any, data?: DescribeImagePermissionsCommandOutput) => void): void;
    describeImagePermissions(args: DescribeImagePermissionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeImagePermissionsCommandOutput) => void): void;
    
    describeImages(args: DescribeImagesCommandInput, options?: __HttpHandlerOptions): Promise<DescribeImagesCommandOutput>;
    describeImages(args: DescribeImagesCommandInput, cb: (err: any, data?: DescribeImagesCommandOutput) => void): void;
    describeImages(args: DescribeImagesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeImagesCommandOutput) => void): void;
    
    describeSessions(args: DescribeSessionsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeSessionsCommandOutput>;
    describeSessions(args: DescribeSessionsCommandInput, cb: (err: any, data?: DescribeSessionsCommandOutput) => void): void;
    describeSessions(args: DescribeSessionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeSessionsCommandOutput) => void): void;
    
    describeStacks(args: DescribeStacksCommandInput, options?: __HttpHandlerOptions): Promise<DescribeStacksCommandOutput>;
    describeStacks(args: DescribeStacksCommandInput, cb: (err: any, data?: DescribeStacksCommandOutput) => void): void;
    describeStacks(args: DescribeStacksCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeStacksCommandOutput) => void): void;
    
    describeUsageReportSubscriptions(args: DescribeUsageReportSubscriptionsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeUsageReportSubscriptionsCommandOutput>;
    describeUsageReportSubscriptions(args: DescribeUsageReportSubscriptionsCommandInput, cb: (err: any, data?: DescribeUsageReportSubscriptionsCommandOutput) => void): void;
    describeUsageReportSubscriptions(args: DescribeUsageReportSubscriptionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeUsageReportSubscriptionsCommandOutput) => void): void;
    
    describeUsers(args: DescribeUsersCommandInput, options?: __HttpHandlerOptions): Promise<DescribeUsersCommandOutput>;
    describeUsers(args: DescribeUsersCommandInput, cb: (err: any, data?: DescribeUsersCommandOutput) => void): void;
    describeUsers(args: DescribeUsersCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeUsersCommandOutput) => void): void;
    
    describeUserStackAssociations(args: DescribeUserStackAssociationsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeUserStackAssociationsCommandOutput>;
    describeUserStackAssociations(args: DescribeUserStackAssociationsCommandInput, cb: (err: any, data?: DescribeUserStackAssociationsCommandOutput) => void): void;
    describeUserStackAssociations(args: DescribeUserStackAssociationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeUserStackAssociationsCommandOutput) => void): void;
    
    disableUser(args: DisableUserCommandInput, options?: __HttpHandlerOptions): Promise<DisableUserCommandOutput>;
    disableUser(args: DisableUserCommandInput, cb: (err: any, data?: DisableUserCommandOutput) => void): void;
    disableUser(args: DisableUserCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisableUserCommandOutput) => void): void;
    
    disassociateApplicationFleet(args: DisassociateApplicationFleetCommandInput, options?: __HttpHandlerOptions): Promise<DisassociateApplicationFleetCommandOutput>;
    disassociateApplicationFleet(args: DisassociateApplicationFleetCommandInput, cb: (err: any, data?: DisassociateApplicationFleetCommandOutput) => void): void;
    disassociateApplicationFleet(args: DisassociateApplicationFleetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisassociateApplicationFleetCommandOutput) => void): void;
    
    disassociateFleet(args: DisassociateFleetCommandInput, options?: __HttpHandlerOptions): Promise<DisassociateFleetCommandOutput>;
    disassociateFleet(args: DisassociateFleetCommandInput, cb: (err: any, data?: DisassociateFleetCommandOutput) => void): void;
    disassociateFleet(args: DisassociateFleetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisassociateFleetCommandOutput) => void): void;
    
    enableUser(args: EnableUserCommandInput, options?: __HttpHandlerOptions): Promise<EnableUserCommandOutput>;
    enableUser(args: EnableUserCommandInput, cb: (err: any, data?: EnableUserCommandOutput) => void): void;
    enableUser(args: EnableUserCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: EnableUserCommandOutput) => void): void;
    
    expireSession(args: ExpireSessionCommandInput, options?: __HttpHandlerOptions): Promise<ExpireSessionCommandOutput>;
    expireSession(args: ExpireSessionCommandInput, cb: (err: any, data?: ExpireSessionCommandOutput) => void): void;
    expireSession(args: ExpireSessionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ExpireSessionCommandOutput) => void): void;
    
    listAssociatedFleets(args: ListAssociatedFleetsCommandInput, options?: __HttpHandlerOptions): Promise<ListAssociatedFleetsCommandOutput>;
    listAssociatedFleets(args: ListAssociatedFleetsCommandInput, cb: (err: any, data?: ListAssociatedFleetsCommandOutput) => void): void;
    listAssociatedFleets(args: ListAssociatedFleetsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListAssociatedFleetsCommandOutput) => void): void;
    
    listAssociatedStacks(args: ListAssociatedStacksCommandInput, options?: __HttpHandlerOptions): Promise<ListAssociatedStacksCommandOutput>;
    listAssociatedStacks(args: ListAssociatedStacksCommandInput, cb: (err: any, data?: ListAssociatedStacksCommandOutput) => void): void;
    listAssociatedStacks(args: ListAssociatedStacksCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListAssociatedStacksCommandOutput) => void): void;
    
    listTagsForResource(args: ListTagsForResourceCommandInput, options?: __HttpHandlerOptions): Promise<ListTagsForResourceCommandOutput>;
    listTagsForResource(args: ListTagsForResourceCommandInput, cb: (err: any, data?: ListTagsForResourceCommandOutput) => void): void;
    listTagsForResource(args: ListTagsForResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListTagsForResourceCommandOutput) => void): void;
    
    startFleet(args: StartFleetCommandInput, options?: __HttpHandlerOptions): Promise<StartFleetCommandOutput>;
    startFleet(args: StartFleetCommandInput, cb: (err: any, data?: StartFleetCommandOutput) => void): void;
    startFleet(args: StartFleetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StartFleetCommandOutput) => void): void;
    
    startImageBuilder(args: StartImageBuilderCommandInput, options?: __HttpHandlerOptions): Promise<StartImageBuilderCommandOutput>;
    startImageBuilder(args: StartImageBuilderCommandInput, cb: (err: any, data?: StartImageBuilderCommandOutput) => void): void;
    startImageBuilder(args: StartImageBuilderCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StartImageBuilderCommandOutput) => void): void;
    
    stopFleet(args: StopFleetCommandInput, options?: __HttpHandlerOptions): Promise<StopFleetCommandOutput>;
    stopFleet(args: StopFleetCommandInput, cb: (err: any, data?: StopFleetCommandOutput) => void): void;
    stopFleet(args: StopFleetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StopFleetCommandOutput) => void): void;
    
    stopImageBuilder(args: StopImageBuilderCommandInput, options?: __HttpHandlerOptions): Promise<StopImageBuilderCommandOutput>;
    stopImageBuilder(args: StopImageBuilderCommandInput, cb: (err: any, data?: StopImageBuilderCommandOutput) => void): void;
    stopImageBuilder(args: StopImageBuilderCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StopImageBuilderCommandOutput) => void): void;
    
    tagResource(args: TagResourceCommandInput, options?: __HttpHandlerOptions): Promise<TagResourceCommandOutput>;
    tagResource(args: TagResourceCommandInput, cb: (err: any, data?: TagResourceCommandOutput) => void): void;
    tagResource(args: TagResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: TagResourceCommandOutput) => void): void;
    
    untagResource(args: UntagResourceCommandInput, options?: __HttpHandlerOptions): Promise<UntagResourceCommandOutput>;
    untagResource(args: UntagResourceCommandInput, cb: (err: any, data?: UntagResourceCommandOutput) => void): void;
    untagResource(args: UntagResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UntagResourceCommandOutput) => void): void;
    
    updateApplication(args: UpdateApplicationCommandInput, options?: __HttpHandlerOptions): Promise<UpdateApplicationCommandOutput>;
    updateApplication(args: UpdateApplicationCommandInput, cb: (err: any, data?: UpdateApplicationCommandOutput) => void): void;
    updateApplication(args: UpdateApplicationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateApplicationCommandOutput) => void): void;
    
    updateDirectoryConfig(args: UpdateDirectoryConfigCommandInput, options?: __HttpHandlerOptions): Promise<UpdateDirectoryConfigCommandOutput>;
    updateDirectoryConfig(args: UpdateDirectoryConfigCommandInput, cb: (err: any, data?: UpdateDirectoryConfigCommandOutput) => void): void;
    updateDirectoryConfig(args: UpdateDirectoryConfigCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateDirectoryConfigCommandOutput) => void): void;
    
    updateFleet(args: UpdateFleetCommandInput, options?: __HttpHandlerOptions): Promise<UpdateFleetCommandOutput>;
    updateFleet(args: UpdateFleetCommandInput, cb: (err: any, data?: UpdateFleetCommandOutput) => void): void;
    updateFleet(args: UpdateFleetCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateFleetCommandOutput) => void): void;
    
    updateImagePermissions(args: UpdateImagePermissionsCommandInput, options?: __HttpHandlerOptions): Promise<UpdateImagePermissionsCommandOutput>;
    updateImagePermissions(args: UpdateImagePermissionsCommandInput, cb: (err: any, data?: UpdateImagePermissionsCommandOutput) => void): void;
    updateImagePermissions(args: UpdateImagePermissionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateImagePermissionsCommandOutput) => void): void;
    
    updateStack(args: UpdateStackCommandInput, options?: __HttpHandlerOptions): Promise<UpdateStackCommandOutput>;
    updateStack(args: UpdateStackCommandInput, cb: (err: any, data?: UpdateStackCommandOutput) => void): void;
    updateStack(args: UpdateStackCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateStackCommandOutput) => void): void;
}
