import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
import { AppStreamClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../AppStreamClient";
import { UpdateFleetRequest, UpdateFleetResult } from "../models/models_0";
export interface UpdateFleetCommandInput extends UpdateFleetRequest {
}
export interface UpdateFleetCommandOutput extends UpdateFleetResult, __MetadataBearer {
}
/**
 * <p>Updates the specified fleet.</p>
 *         <p>If the fleet is in the <code>STOPPED</code> state, you can update any attribute except
 *             the fleet name.</p>
 *         <p>If the fleet is in the <code>RUNNING</code> state, you can update the following based
 *             on the fleet type:</p>
 *         <ul>
 *             <li>
 *                <p>Always-On and On-Demand fleet types</p>
 *                 <p>You can update the  <code>DisplayName</code>, <code>ComputeCapacity</code>,
 *                         <code>ImageARN</code>, <code>ImageName</code>,
 *                         <code>IdleDisconnectTimeoutInSeconds</code>, and
 *                         <code>DisconnectTimeoutInSeconds</code> attributes.</p>
 *             </li>
 *             <li>
 *                <p>Elastic fleet type</p>
 *                 <p>You can update the  <code>DisplayName</code>,
 *                         <code>IdleDisconnectTimeoutInSeconds</code>,
 *                         <code>DisconnectTimeoutInSeconds</code>, <code>MaxConcurrentSessions</code>,
 *                     and <code>UsbDeviceFilterStrings</code> attributes.</p>
 *             </li>
 *          </ul>
 *         <p>If the fleet is in the <code>STARTING</code> or <code>STOPPED</code> state, you can't update it.</p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { AppStreamClient, UpdateFleetCommand } from "@aws-sdk/client-appstream"; // ES Modules import
 * // const { AppStreamClient, UpdateFleetCommand } = require("@aws-sdk/client-appstream"); // CommonJS import
 * const client = new AppStreamClient(config);
 * const command = new UpdateFleetCommand(input);
 * const response = await client.send(command);
 * ```
 *
 * @see {@link UpdateFleetCommandInput} for command's `input` shape.
 * @see {@link UpdateFleetCommandOutput} for command's `response` shape.
 * @see {@link AppStreamClientResolvedConfig | config} for AppStreamClient's `config` shape.
 *
 */
export declare class UpdateFleetCommand extends $Command<UpdateFleetCommandInput, UpdateFleetCommandOutput, AppStreamClientResolvedConfig> {
    readonly input: UpdateFleetCommandInput;
    constructor(input: UpdateFleetCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: AppStreamClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateFleetCommandInput, UpdateFleetCommandOutput>;
    private serialize;
    private deserialize;
}
